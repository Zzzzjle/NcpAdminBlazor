// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using NcpAdminBlazor.Client.Api.User.Create;
using NcpAdminBlazor.Client.Api.User.Item;
using NcpAdminBlazor.Client.Api.User.List;
using NcpAdminBlazor.Client.Api.User.Login;
using NcpAdminBlazor.Client.Api.User.Profile;
using NcpAdminBlazor.Client.Api.User.RefreshToken;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace NcpAdminBlazor.Client.Api.User
{
    /// <summary>
    /// Builds and executes requests for operations under \api\user
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UserRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The create property</summary>
        public global::NcpAdminBlazor.Client.Api.User.Create.CreateRequestBuilder Create
        {
            get => new global::NcpAdminBlazor.Client.Api.User.Create.CreateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The list property</summary>
        public global::NcpAdminBlazor.Client.Api.User.List.ListRequestBuilder List
        {
            get => new global::NcpAdminBlazor.Client.Api.User.List.ListRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The login property</summary>
        public global::NcpAdminBlazor.Client.Api.User.Login.LoginRequestBuilder Login
        {
            get => new global::NcpAdminBlazor.Client.Api.User.Login.LoginRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The profile property</summary>
        public global::NcpAdminBlazor.Client.Api.User.Profile.ProfileRequestBuilder Profile
        {
            get => new global::NcpAdminBlazor.Client.Api.User.Profile.ProfileRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The refreshToken property</summary>
        public global::NcpAdminBlazor.Client.Api.User.RefreshToken.RefreshTokenRequestBuilder RefreshToken
        {
            get => new global::NcpAdminBlazor.Client.Api.User.RefreshToken.RefreshTokenRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the NcpAdminBlazor.Client.api.user.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        /// <returns>A <see cref="global::NcpAdminBlazor.Client.Api.User.Item.WithUserItemRequestBuilder"/></returns>
        public global::NcpAdminBlazor.Client.Api.User.Item.WithUserItemRequestBuilder this[long position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("userId", position);
                return new global::NcpAdminBlazor.Client.Api.User.Item.WithUserItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the NcpAdminBlazor.Client.api.user.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        /// <returns>A <see cref="global::NcpAdminBlazor.Client.Api.User.Item.WithUserItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::NcpAdminBlazor.Client.Api.User.Item.WithUserItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("userId", position);
                return new global::NcpAdminBlazor.Client.Api.User.Item.WithUserItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::NcpAdminBlazor.Client.Api.User.UserRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UserRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/user", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::NcpAdminBlazor.Client.Api.User.UserRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UserRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/user", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
