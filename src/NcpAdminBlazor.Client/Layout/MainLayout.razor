@using Microsoft.AspNetCore.Components.Authorization
@using NcpAdminBlazor.Client.Pages.Pages.Authentication
@using NcpAdminBlazor.Client.Providers

@inherits LayoutComponentBase

<AuthorizeView>
    <Authorized>
        <MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode"/>
        <MudPopoverProvider/>
        <MudDialogProvider/>
        <MudSnackbarProvider/>
        <MudLayout>
            <MudAppBar Elevation="1">
                <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" OnClick="@DrawerToggle"/>
                <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
                <MudSpacer/>
                <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle"/>
                <MudMenu Icon="@Icons.Material.Outlined.Translate" Color="Color.Inherit" Dense="true">
                    <MudMenuItem>English</MudMenuItem>
                    <MudMenuItem>Swedish</MudMenuItem>
                    <MudMenuItem>Old Norse</MudMenuItem>
                </MudMenu>
                <MudMenu Icon="@Icons.Material.Outlined.Widgets" Color="Color.Inherit" Dense="true">
                    <MudMenuItem Href="https://mudblazor.com/">MudBlazor</MudMenuItem>
                    <MudMenuItem Href="https://github.com/Garderoben/MudBlazor.Templates">Source Code</MudMenuItem>
                </MudMenu>
                <MudMenu Class="ml-4">
                    <ActivatorContent>
                        <MudAvatar/>
                    </ActivatorContent>
                    <ChildContent>
                        <MudMenuItem Icon="@Icons.Material.Outlined.Person"
                                     Href="/personal/account">
                            Account
                        </MudMenuItem>
                        <MudMenuItem Icon="@Icons.Material.Outlined.Logout"
                                     OnClick="@Logout"
                                     Href="@Login.PageUrl">
                            Logout
                        </MudMenuItem>

                    </ChildContent>
                </MudMenu>
            </MudAppBar>
            <MudDrawer @bind-Open="_drawerOpen" Elevation="2">
                <MudDrawerHeader>
                    <NavLink ActiveClass="d-flex align-center me-4" href="/">
                        <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Size="Size.Large" Class="mr-2"/>
                        <MudText Typo="Typo.h5">Application</MudText>
                    </NavLink>
                </MudDrawerHeader>
                <NavMenu/>
            </MudDrawer>
            <MudMainContent>
                <MudContainer MaxWidth="MaxWidth.False">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        @Body
    </NotAuthorized>
</AuthorizeView>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {

    [Inject] TokenAuthenticationStateProvider TokenAuthenticationStateProvider { get; set; } = null!;
    [Inject] NavigationManager NavigationManager { get; set; } = null!;
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new MudTheme
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };

    async Task Logout()
    {
        await TokenAuthenticationStateProvider.Logout();
        NavigationManager.NavigateTo(Login.PageUrl);
    }

    private readonly List<BreadcrumbItem> _items =
    [
        new("Personal", href: "#"),
        new("Dashboard", href: "#")
    ];

}


